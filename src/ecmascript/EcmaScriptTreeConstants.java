/* Generated By:JavaCC: Do not edit this line. EcmaScriptTreeConstants.java Version 5.0 */
package ecmascript;

public interface EcmaScriptTreeConstants
{
  public int JJTERROR_SKIPTO = 0;
  public int JJTVOID = 1;
  public int JJTTHISREFERENCE = 2;
  public int JJTPARENEXPRESSION = 3;
  public int JJTLITERAL = 4;
  public int JJTIDENTIFIER = 5;
  public int JJTARRAYLITERAL = 6;
  public int JJTOBJECTLITERAL = 7;
  public int JJTLITERALFIELD = 8;
  public int JJTCOMPOSITEREFERENCE = 9;
  public int JJTALLOCATIONEXPRESSION = 10;
  public int JJTPROPERTYVALUEREFERENCE = 11;
  public int JJTPROPERTYIDENTIFIERREFERENCE = 12;
  public int JJTFUNCTIONCALLPARAMETERS = 13;
  public int JJTPOSTFIXEXPRESSION = 14;
  public int JJTOPERATOR = 15;
  public int JJTUNARYEXPRESSION = 16;
  public int JJTBINARYEXPRESSIONSEQUENCE = 17;
  public int JJTANDEXPRESSIONSEQUENCE = 18;
  public int JJTOREXPRESSIONSEQUENCE = 19;
  public int JJTCONDITIONALEXPRESSION = 20;
  public int JJTASSIGNMENTEXPRESSION = 21;
  public int JJTEXPRESSIONLIST = 22;
  public int JJTEXPRESSIONNOIN = 23;
  public int JJTBLOCK = 24;
  public int JJTSTATEMENTLIST = 25;
  public int JJTVARIABLESTATEMENT = 26;
  public int JJTVARIABLEDECLARATIONLIST = 27;
  public int JJTVARIABLEDECLARATION = 28;
  public int JJTVARIABLEDECLARATIONNOIN = 29;
  public int JJTEMPTYEXPRESSION = 30;
  public int JJTEMPTYSTATEMENT = 31;
  public int JJTEXPRESSIONSTATEMENT = 32;
  public int JJTIFSTATEMENT = 33;
  public int JJTDOSTATEMENT = 34;
  public int JJTWHILESTATEMENT = 35;
  public int JJTFORSTATEMENT = 36;
  public int JJTFORVARSTATEMENT = 37;
  public int JJTFORVARINSTATEMENT = 38;
  public int JJTFORINSTATEMENT = 39;
  public int JJTCONTINUESTATEMENT = 40;
  public int JJTBREAKSTATEMENT = 41;
  public int JJTRETURNSTATEMENT = 42;
  public int JJTWITHSTATEMENT = 43;
  public int JJTSWITCHSTATEMENT = 44;
  public int JJTCASEGROUPS = 45;
  public int JJTCASEGROUP = 46;
  public int JJTCASEGUARD = 47;
  public int JJTLABELLEDSTATEMENT = 48;
  public int JJTTHROWSTATEMENT = 49;
  public int JJTTRYSTATEMENT = 50;
  public int JJTCATCHCLAUSE = 51;
  public int JJTFINALLYCLAUSE = 52;
  public int JJTFUNCTIONDECLARATION = 53;
  public int JJTFORMALPARAMETERLIST = 54;
  public int JJTPROGRAM = 55;
  public int JJTIMPORTSTATEMENT = 56;
  public int JJTNAME = 57;
  public int JJTINSERTSEMICOLON = 58;


  public String[] jjtNodeName = {
    "error_skipto",
    "void",
    "ThisReference",
    "ParenExpression",
    "Literal",
    "Identifier",
    "ArrayLiteral",
    "ObjectLiteral",
    "LiteralField",
    "CompositeReference",
    "AllocationExpression",
    "PropertyValueReference",
    "PropertyIdentifierReference",
    "FunctionCallParameters",
    "PostfixExpression",
    "Operator",
    "UnaryExpression",
    "BinaryExpressionSequence",
    "AndExpressionSequence",
    "OrExpressionSequence",
    "ConditionalExpression",
    "AssignmentExpression",
    "ExpressionList",
    "ExpressionNoIn",
    "Block",
    "StatementList",
    "VariableStatement",
    "VariableDeclarationList",
    "VariableDeclaration",
    "VariableDeclarationNoIn",
    "EmptyExpression",
    "EmptyStatement",
    "ExpressionStatement",
    "IfStatement",
    "DoStatement",
    "WhileStatement",
    "ForStatement",
    "ForVarStatement",
    "ForVarInStatement",
    "ForInStatement",
    "ContinueStatement",
    "BreakStatement",
    "ReturnStatement",
    "WithStatement",
    "SwitchStatement",
    "CaseGroups",
    "CaseGroup",
    "CaseGuard",
    "LabelledStatement",
    "ThrowStatement",
    "TryStatement",
    "CatchClause",
    "FinallyClause",
    "FunctionDeclaration",
    "FormalParameterList",
    "Program",
    "ImportStatement",
    "Name",
    "insertSemiColon",
  };
}
/* JavaCC - OriginalChecksum=662fa672ba36a6e11b0932bcae94981c (do not edit this line) */
